#include <iostream>
#include <string>

using namespace std;

struct Node {
    int key;
    Node* left;
    Node* right;
    Node(int key) {
        this->key = key;
        this->left = NULL;
        this->right = NULL;
    };
};

struct BST {
    Node* root;
    BST() {
        this->root = NULL;
    }

    Node* add(Node* current, int value) {
        if (current == NULL) {
            current = new Node(value);
        } else if (current->key > value) {
            current->left = add(current->left, value);
        } else {
            current->right = add(current->right, value);
        }
        return current;
    }
};

int main() {
    int n, m;
    cin >> n >> m;
    BST bst;
    for (int i = 0; i < n; i++) {
        int value;
        cin >> value;
        if (bst.root == NULL) {
            bst.root = bst.add(bst.root, value);
        } else {
            bst.add(bst.root, value);
        }
    }

    for (int i = 0; i < m; i++) {
        string path;
        cin >> path;
        Node* current = bst.root;

        for (int j = 0; j < path.size(); j++) {
            if (current == NULL) break;
            if (path[j] == 'L') {
                current = current->left;
            }
            if (path[j] == 'R') {
                current = current->right;
            }
        }
        if (current == NULL) {
            cout << "NO" << endl;
        } else {
            cout << "YES" << endl;
        }
    }
    return 0;
}
