#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;

long long MOD = 1e15 + 9;
long long X = 31;

void otvet(string str){
    unordered_map <long long, bool> hashes;
    for (long long i = 0; i < str.size(); i++) {
        long long d = 0;
        long long powX = 1;
        for (long long j = i; j < str.size(); j++) {
            long long diff = (str[j] - 'a' + 1)* powX % MOD;
            d = (d + diff) % MOD;
            powX = (powX * X) % MOD;
            if (hashes.find(d) == hashes.end()) {
                hashes[d] = true;
            }
        }
    }
    cout << hashes.size();
}

int main() {
    string s;
    cin >> s;
    otvet(s);
}
