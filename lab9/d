#include <iostream>
#include <vector>

using namespace std;

int prefix_function(string s) {
    vector<int> p(s.length());
    int j = 0;
    for (int i = 1; i < s.length(); i++) {
        while (j > 0 && s[j] != s[i]) {
            j = p[j - 1];
        }
        if (s[i] == s[j]) {
            j++;
        }
        p[i] = j;
    }
    return p[s.length() - 1];
}


int main() {
    string word;
    string pattern;
    cin >> pattern;
    int n;
    cin >> n;
    int max = 0;
    string result;
    vector<pair<string,int> > v;
    for(int i = 0; i < n; i++){
   		cin >> word;
   		string temp = word;
   		temp[0] = tolower(temp[0]);
   		string text = temp + " " + pattern;
   		int k = prefix_function(text);
   		if(k >= max){
   			max = k;
   			v.push_back(make_pair(word, max));
		}
	}
	vector<string> r;
   	for(auto p: v){
   		if(max == p.second && max != 0){
   			r.push_back(p.first);
		   }
	}
	cout << r.size() << endl;
	for(auto p: r){
   		cout << p << endl;
	}
}
