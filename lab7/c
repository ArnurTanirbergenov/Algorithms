#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int binarySearch(vector<int>& arr1, int target) {
    int left = 0;
    int right = arr1.size() - 1;
    sort(arr1.begin(), arr1.end());
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (arr1[mid] == target) {
        	arr1.erase(arr1.begin() + mid);
            return target;
        } else if (arr1[mid] < target) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    return -1;
}

int main() {
    int n, k;
    cin >> n >> k;
    vector<int> arr1(n);
    vector<int> arr2(k);

    for (int i = 0; i < n; i++) {
        cin >> arr1[i];
    }
    for (int i = 0; i < k; i++) {
        cin >> arr2[i];
    }

    vector<int> arr3;
    for (int i = 0; i < k; i++) {
        int result = binarySearch(arr1, arr2[i]);
        if (result != -1) {
            arr3.push_back(result);
        }
    }
	sort(arr3.begin(), arr3.end());
    for (int i = 0; i < arr3.size(); i++) {
        cout << arr3[i] << " ";
    }
    cout << endl;

    return 0;
}
