#include <iostream>
#include <queue>
#include <vector>
using namespace std;
vector<int> g[10000];
int d[10000];
int color[10000];

void dfs(int st){
	d[st] = 0;
	queue<int> q;
	q.push(st);
	while(!q.empty()){
		int v = q.front();
		q.pop();
		for(int u: g[v]){
			if(d[u] > d[v] + 1){
				d[u] = d[v] + 1;
				q.push(u);
			}
		}
	}
}
int main() {
	int n, m ,que;
	cin >> n >> m >> que;
	for(int i = 0 ; i < m; i++){
		int a, b;
		cin >> a >> b;
		g[a].push_back(b);
		g[b].push_back(a);
	}
	for(int i = 1 ; i <= n; i++){
		d[i] = 1e9;
	}
	for(int i = 1 ; i <= que; i++){
		int a, b;
		cin >> a >> b;
		if(a == 1){
			if(color[b] != 1){
				dfs(b);
				color[b] = 1;
			}
		}
		else{
			if(d[b] == 1e9){
				cout << -1 << endl;
			}
			else{
				cout << d[b] << endl;
			}
		}
	}
}
