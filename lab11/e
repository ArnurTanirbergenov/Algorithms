#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;
typedef long long ll;
typedef pair<ll, ll> pll;
vector<ll> g[1000500];
ll p[1000500];
ll sz[1000500];
ll ans[1000500];
ll n, m;
void make_set(ll n){
	for(ll i = 0; i < n; i++){
		p[i] = i;
		sz[i] = 1;
	}
}
ll find(ll a){
	if(a == p[a]){
		return a;
	}
	return p[a] = find(p[a]);
}
bool unite(ll a, ll b){
	a = find(a);
	b = find(b);
	if(a == b){
		return false;
	}
	if(sz[b] > sz[a]){
		swap(a, b);
	}
	p[b] = a;
	sz[a] += sz[b];
	return true;
}
int main() {
	cin >> n >> m;
	make_set(n);
	for(int i = 0; i < m; i++){
		int a, b;
		cin >> a >> b;
		a--;
		b--;
		g[a].push_back(b);
		g[b].push_back(a);
	}
	ll cnt = 0;
	for(ll i = n - 1; i > 0; i--){
		for(ll j : g[i]){
			if(j > i){
				cnt += unite(i,j);
			}
		}
		ans[i-1] = n - i - cnt;
	}
	for(ll i = 0; i < n; i++){
		cout << ans[i] << endl;
	}
}
